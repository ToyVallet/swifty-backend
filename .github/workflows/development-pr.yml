name: build test for PR on development branch

# on: 어떤 이벤트가 발생했을 때 해당 workflow를 실행시킬지에 대한 정의
on:
  pull_request:
    branches: [ "development" ]
    types: [ opened, reopened, synchronize ]

permissions:
  checks: write
  pull-requests: write

jobs:
  build-and-test:
    # Runner가 동작할 OS 환경
    runs-on: ubuntu-latest
    steps:
      # Github 레포지토리로부터 CI서버로 소스코드를 내려받은 후에 지정한 브랜치로 전환하는 역할
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # submodule 적용
          token: ${{ secrets.PAT }}
          submodules: true

      # Java 17 버전 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 빌드를 위한 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Gradle을 이용하여 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: clean bootJar

      # Unit test 진행
      - name: Test with Gradle
        run: ./gradlew --info test
        env:
          SPRING_PROFILES_ACTIVE: test

      # Unit test에 대한 리포트 작성
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'
      
      # 테스트 실패 시, 실패한 코드 라인에 Check 코멘트 등록
      - name: Comment to test failed code line
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}
