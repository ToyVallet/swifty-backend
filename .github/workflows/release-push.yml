name: push on release branch

# on: 어떤 이벤트가 발생했을 때 해당 workflow를 실행시킬지에 대한 정의
on:
  push:
    branches: [ "release/**" ]

permissions: write-all

jobs:
  push-to-ghcr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          submodules: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: clean bootJar

      # Unit test 진행
      - name: Test with Gradle
        run: ./gradlew --info test
        env:
          SPRING_PROFILES_ACTIVE: test

      # Unit test에 대한 리포트 작성
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      # 테스트 실패 시, 실패한 코드 라인에 Check 코멘트 등록
      - name: Comment to test failed code line
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}

      # Github Container Registry 로그인
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      # Docker buildx 셋업
      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      # repository owner 이름 소문자로 치환
      - name: set owner's name to lower case
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      # 버전 태깅
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.PAT }}

      # Docker 이미지 빌드 및 Github Container Registry에 push
      - name: Build and Push
        uses: docker/build-push-action@v5
        id: docker_build
        with:
          context: .
          file: ./submodule-config/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/swifty-backend:development-latest
            ghcr.io/${{ env.OWNER_LC }}/swifty-backend:${{ steps.tag_version.outputs.new_tag }}

#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          # submodule로부터 환경변수 가져오기
#          token: ${{ secrets.PAT }}
#          repository: ${{ env.OWNER_LC }}/submodule-config
#          branch: main

#       - name: Update Image Tag in Manifests
#         run: |
#           ls
#           sed -i "s|swifty-backend:.*|swifty-backend:${{ github.sha }}|" ./manifests/bases/application/app-deployment.yaml
#           cd ./manifests
#           git config user.name ${{ github.actor }}
#           git commit -am "Update image tag to ${{ github.sha }}"
#           git push -u origin main
