name: push on main branch

# on: 어떤 이벤트가 발생했을 때 해당 workflow를 실행시킬지에 대한 정의
on:
  # main 브랜치에서 push 이벤트가 발생하면 workflow 실행
  push:
    branches: [ "main" ]

permissions: write-all

jobs:
  push-to-ghcr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # submodule로부터 환경변수 가져오기
          token: ${{ secrets.PAT }}
          submodules: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: clean bootJar

      # 버전 태깅
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.PAT }}

      # Github Container Registry 로그인
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      # Docker buildx 셋업
      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      # repository owner 이름 소문자로 치환
      - name: set owner's name to lower case
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      # Docker 이미지 빌드 및 Github Container Registry에 push
      - name: Build and Push
        uses: docker/build-push-action@v5
        id: docker_build
        with:
          context: .
          file: ./submodule-config/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/swifty-backend:latest
            ghcr.io/${{ env.OWNER_LC }}/swifty-backend:${{ steps.tag_version.outputs.new_tag }}
      
      # Github에 release 생성
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
  
